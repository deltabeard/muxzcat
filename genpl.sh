#! /bin/bash --
# by pts@fazekas.hu at Sun Feb  3 14:50:42 CET 2019

set -ex
# Example #1: -DCONFIG_DEBUG
gcc -C -E -DCONFIG_LANG_PERL "$@" -ansi -O2 -W -Wall -Wextra -Werror muaxzcat.c >muaxzcat.pl.tmp1
(<muaxzcat.c perl -ne '
    $_ = join("", <STDIN>);
    die "Missing numeric constants.\n" if !s@NUMERIC_CONSTANTS[^\n]*\n(.*?\n)#endif@@s;
    $_ = "$1\n";
    s@/[*].*?[*]/@ @sg;
    s@^#define\s+(\w+)\s+(.*?)\s*$@sub $1() { $2 }@mg;
    s@\s*\n\s*@\n@g;
    s@\A\s+@@;
    print "$_\n\n"' &&
<muaxzcat.pl.tmp1 perl -0777 -pe 's@\A.*START_PREPROCESSED\s+@@s') >muaxzcat.pl.tmp2 || exit "$?"
(echo '#! /usr/bin/env perl
#
# muxzcat.pl: tiny .xz and .lzma decompression filter
# by pts@fazekas.hu at Thu Feb  7 00:19:59 CET 2019
#
# Usage: perl muxzcat.pl <input.xz >output.bin
#
# https://github.com/pts/muxzcat
#
# This file was autogenerated by genpl.sh from muaxzcat.c.
#
BEGIN { $^W = 1 }
# Silence warning about goto-into-while.
BEGIN { eval { require warnings; unimport warnings qw(deprecated) }; }
use integer;
use strict;
# Older versions of Perl lose the value of my $x between nested gotos.
die "fatal: your Perl is too old, upgrade to >=5.8.4\n" if !sub {
    goto a; for (;;) { a: my $x = 1; goto b; for (;;) { b: return $x } } }->();
' &&
<muaxzcat.pl.tmp2 perl -0777 -pe 's@^#(?!!).*\n@@gm; sub cont($) { my $s = $_[0]; $s =~ s@\A\s+@@; $s =~ s@\s+\Z(?!\n)@@; $s =~ s@\n[ \t]?([ \t]*)@\n$1# @g; $s } s@/[*](.*?)[*]/\n*@ "# " . cont($1) . "\n" @gse;
    s@(\S) (#.*)|(#.*)@ defined($1) ? "$1  $2" : $3 @ge;
    s@^[ \t]*do \{\} while \(0 && .*\n@@mg;
    s@^[ \t]*;[ \t]*\n@@mg;
    s@^[ \t]*GLOBAL @@mg') >muaxzcat.pl || exit "$?"
# TODO(pts): Better multiline comments with * continuation.
# TODO(pts): Keep empty lines above FUNC_ARG0(SRes, Decompress).

: genpl.sh OK.
